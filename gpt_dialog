I want to start with implementation maria db in dockerfile. I pulled mariadb image named "mariadb"

Now I need to create dockerfile to run mariadb image in created "api_network". Set  username as "root". Set password as "root".

What is best practice to start database in a container and create default data schema?

Modify your previous docker-compose file following parameters.
1) MariaDB container name = "mariadb"
2) MARIADB_USER=root
3) MARIADB_PASSWORD=root
4) MARIADB_ROOT_PASSWORD=root
5) MARIADB_DATABASE=api_db
6) network=api_network


# RUN MARIA DB ONLY FROM SHELL
docker run -d --name mariadb \
  -e MYSQL_USER=root \
  -e MYSQL_PASSWORD=root \
  -e MYSQL_ROOT_PASSWORD=root \
  -e MYSQL_DATABASE=api_db \
  -v ${PWD}/database:/var/lib/mysql \
  -p 3306:3306 \
  --network api_network \
  mariadb:latest

# ENTER MARAIDB DATABASE AND GET IN api_db DATABASE
mysql -h localhost -P 3306 -uroot -proot


# Q
I run mariadb container with following command:
'''docker run -d --name mariadb \
  -e MYSQL_USER=root \
  -e MYSQL_PASSWORD=root \
  -e MYSQL_ROOT_PASSWORD=root \
  -e MYSQL_DATABASE=api_db \
  -v ${PWD}/database:/var/lib/mysql \
  -p 3306:3306 \
  --network api_network \
  mariadb:latest'''
What should I do next to create database "api_db" insight and create some tables mentioned above?


# RUN DOCKER COMPOSE WITH MARIA DB
1. docker-compose up -d 
2. docker exec -it mariadb bash
3. mariadb -h localhost -P 3306 -uroot -proot

# Остановка docker-compose
1. docker-compose down
2. docker-compose down --volumes


# Когда не хватает прав на удаление файло, оставшихся полсе рабооты докера
# . указывает на исходную директорию
sudo chown -R $(whoami):$(whoami) . 



# Про htttp коды ответа
https://fastapi.tiangolo.com/ru/tut orial/response-status-code/
Кратко о значениях кодов:
  1XX – статус-коды информационного типа. Они редко используются разработчиками напрямую. Ответы с этими кодами не могут иметь тела.
  2XX – статус-коды, сообщающие об успешной обработке запроса. Они используются чаще всего.
      200 – это код статуса ответа по умолчанию, который означает, что все прошло "OK".
      Другим примером может быть статус 201, "Created". Он обычно используется после создания новой записи в базе данных.
      Особый случай – 204, "No Content". Этот статус ответа используется, когда нет содержимого для возврата клиенту, и поэтому ответ не должен иметь тела.
  3XX – статус-коды, сообщающие о перенаправлениях. Ответы с этими кодами статуса могут иметь или не иметь тело, за исключением ответов со статусом 304, "Not Modified", у которых не должно быть тела.
  4XX – статус-коды, сообщающие о клиентской ошибке. Это ещё одна наиболее часто используемая категория.
      Пример – код 404 для статуса "Not Found".
      Для общих ошибок со стороны клиента можно просто использовать код 400.
  5XX – статус-коды, сообщающие о серверной ошибке. Они почти никогда не используются разработчиками напрямую. Когда что-то идет не так в какой-то части кода вашего приложения или на сервере, он автоматически вернёт один из 5XX кодов.

# Дока по интеграции SQLAlchemy
https://fastapi.tiangolo.com/ru/tutorial/sql-databases/